/// <reference types="node" />
import { ISecp256k1 } from './typings';
export declare const secp256k1: ISecp256k1;
export declare function secp256k1Compress(publicKey: Buffer): Buffer;
export declare function secp256k1Decompress(publicKey: Buffer): Buffer;
export declare function secp256k1GeneratePrivate(): Buffer;
export declare function secp256k1VerifyPrivateKey(privateKey: Buffer): boolean;
export declare function secp256k1GetPublic(privateKey: Buffer): Buffer;
export declare function secp256k1GetPublicCompressed(privateKey: Buffer): Buffer;
export declare function secp256k1SignatureExport(sig: Buffer): Buffer;
export declare function secp256k1SignatureImport(sig: Buffer): Buffer;
export declare function secp256k1Sign(msg: Buffer, privateKey: Buffer, rsvSig?: boolean): Buffer;
export declare function secp256k1Recover(sig: Buffer, msg: Buffer, compressed?: boolean): Buffer;
export declare function secp256k1Verify(sig: Buffer, msg: Buffer, publicKey: Buffer): boolean;
export declare function secp256k1Derive(publicKey: Buffer, privateKey: Buffer, compressed?: boolean): Buffer;
//# sourceMappingURL=index.d.ts.map