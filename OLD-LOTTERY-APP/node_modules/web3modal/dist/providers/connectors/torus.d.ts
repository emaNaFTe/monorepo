import { IAbstractConnectorOptions } from "../../helpers";
interface NetworkParams {
    host: "mainnet" | "rinkeby" | "ropsten" | "kovan" | "goerli" | "localhost" | "matic" | string;
    chainId?: number;
    networkName?: string;
}
interface VerifierStatus {
    google?: boolean;
    facebook?: boolean;
    reddit?: boolean;
    twitch?: boolean;
    discord?: boolean;
}
interface LoginParams {
    verifier?: "google" | "facebook" | "twitch" | "reddit" | "discord";
}
export interface IOptions {
    enableLogging?: boolean;
    buttonPosition?: string;
    buildEnv?: string;
    showTorusButton?: boolean;
    enabledVerifiers?: VerifierStatus;
}
export interface ITorusConnectorOptions extends IAbstractConnectorOptions {
    config?: IOptions;
    loginParams?: LoginParams;
    networkParams?: NetworkParams;
}
declare const ConnectToTorus: (Torus: any, opts: ITorusConnectorOptions) => Promise<unknown>;
export default ConnectToTorus;
//# sourceMappingURL=torus.d.ts.map