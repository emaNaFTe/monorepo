{
  "contractName": "IInstantDistributionAgreementV1",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        }
      ],
      "name": "IndexCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        }
      ],
      "name": "IndexSubscribed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "units",
          "type": "uint128"
        }
      ],
      "name": "IndexUnitsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        }
      ],
      "name": "IndexUnsubscribed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "indexValue",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "totalUnitsPending",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "totalUnitsApproved",
          "type": "uint128"
        }
      ],
      "name": "IndexUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        }
      ],
      "name": "SubscriptionApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        }
      ],
      "name": "SubscriptionDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "units",
          "type": "uint128"
        }
      ],
      "name": "SubscriptionUnitsUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "dynamicBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "agreementType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "createIndex",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        }
      ],
      "name": "getIndex",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exist",
          "type": "bool"
        },
        {
          "internalType": "uint128",
          "name": "indexValue",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "totalUnitsApproved",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "totalUnitsPending",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "internalType": "uint128",
          "name": "indexValue",
          "type": "uint128"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "updateIndex",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "distribute",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "calculateDistribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "actualAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "newIndexValue",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "approveSubscription",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "units",
          "type": "uint128"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "updateSubscription",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        }
      ],
      "name": "getSubscription",
      "outputs": [
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        },
        {
          "internalType": "uint128",
          "name": "units",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "pendingDistribution",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "agreementId",
          "type": "bytes32"
        }
      ],
      "name": "getSubscriptionByID",
      "outputs": [
        {
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        },
        {
          "internalType": "uint128",
          "name": "units",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "pendingDistribution",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        }
      ],
      "name": "listSubscriptions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "publishers",
          "type": "address[]"
        },
        {
          "internalType": "uint32[]",
          "name": "indexIds",
          "type": "uint32[]"
        },
        {
          "internalType": "uint128[]",
          "name": "unitsList",
          "type": "uint128[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "subscriber",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "deleteSubscription",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "publisher",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "indexId",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"}],\"name\":\"IndexCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"IndexSubscribed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"units\",\"type\":\"uint128\"}],\"name\":\"IndexUnitsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"IndexUnsubscribed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"indexValue\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"totalUnitsPending\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"totalUnitsApproved\",\"type\":\"uint128\"}],\"name\":\"IndexUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"}],\"name\":\"SubscriptionApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"}],\"name\":\"SubscriptionDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"units\",\"type\":\"uint128\"}],\"name\":\"SubscriptionUnitsUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agreementType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"approveSubscription\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateDistribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"actualAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"newIndexValue\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"createIndex\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"deleteSubscription\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"distribute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"}],\"name\":\"getIndex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exist\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"indexValue\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"totalUnitsApproved\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"totalUnitsPending\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"units\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"pendingDistribution\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"}],\"name\":\"getSubscriptionByID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"units\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"pendingDistribution\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"listSubscriptions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"publishers\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"indexIds\",\"type\":\"uint32[]\"},{\"internalType\":\"uint128[]\",\"name\":\"unitsList\",\"type\":\"uint128[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"dynamicBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"indexValue\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"updateIndex\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"indexId\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"units\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"updateSubscription\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid Notes:   - A publisher can create as many as indeces as possibily identifiable with `indexId`.     - `indexId` is deliberately limited to 32 bits, to avoid the chance for sha-3 collision.       Despite knowing sha-3 collision is only theoratical.   - A publisher can create subscription to an index for any subscriber.   - A subscription consists of:     - The index it subscribes to.     - Number of units subscribed.   - An index consists of:     - Current value as `uint128 indexValue`.     - Total units of the approved subscriptions as `uint128 totalUnitsApproved`.     - Total units of the non approved subscription as `uint128 totalUnitsPending`.   - A publisher can update index with new value that doesn't decrease.   - A publisher can update subscription with any number of units.   - A publisher or a subscriber can delete subscription and reset units to zero.   - A subscriber must approve the index in order to receive distributions from the publisher     each time the index is updated.     - The amount distributed is $$\\\\Delta{index} * units$$   - Distributions to a non approved subscription stays in the publisher's deposit until:     - the subscriber approve the subscription (side effect),     - the publisher update the subscription (side effect),     - the subscriber delete the subscription even if it is never approved (side effect),     - or the subscriber can explicitly claim them.\",\"kind\":\"dev\",\"methods\":{\"agreementType()\":{\"details\":\"ISuperAgreement.agreementType implementation\"},\"approveSubscription(address,address,uint32,bytes)\":{\"details\":\"Approve the subscription of an index.\",\"params\":{\"indexId\":\"Id of the index. # App callbacks - if subscription exist   - AgreementCreated callback to the publisher:      - agreementId is for the subscription - if subscription does not exist   - AgreementUpdated callback to the publisher:      - agreementId is for the subscription\",\"publisher\":\"The publisher of the index.\",\"token\":\"Super token address.\"}},\"calculateDistribution(address,address,uint32,uint256)\":{\"details\":\"Calculate actual distribution amount\",\"params\":{\"amount\":\"The amount of tokens desired to be distributed.\",\"indexId\":\"Id of the index.\",\"publisher\":\"The publisher of the index.\",\"token\":\"Super token address.\"}},\"claim(address,address,uint32,bytes)\":{\"details\":\"Claim pending distributions.\",\"params\":{\"indexId\":\"Id of the index. The subscription should not exist yet. # App callbacks - AgreementUpdated callback to the publisher:    - agreementId is for the subscription\",\"publisher\":\"The publisher of the index.\",\"token\":\"Super token address.\"}},\"createIndex(address,uint32,bytes)\":{\"details\":\"Create a new index for the publisher.\",\"params\":{\"indexId\":\"Id of the index. App callbacks: None\",\"token\":\"Super token address.\"}},\"deleteSubscription(address,address,uint32,address,bytes)\":{\"details\":\"Delete the subscription of an user.\",\"params\":{\"indexId\":\"Id of the index.\",\"publisher\":\"The publisher of the index.\",\"subscriber\":\"The user, a subscriber. # App callbacks - if the subscriber called it   - AgreementTerminated callback to the publsiher:      - agreementId is for the subscription - if the publisher called it   - AgreementTerminated callback to the subscriber:      - agreementId is for the subscription\",\"token\":\"Super token address.\"}},\"distribute(address,uint32,uint256,bytes)\":{\"details\":\"Distribute tokens through the index.\",\"params\":{\"amount\":\"The amount of tokens desired to be distributed. NOTE: - This is a convenient version of updateIndex. It adds to the index   a delta that equals to `amount / totalUnits`. - The actual amount distributed could be obtained via   `calculateDistribution`. This is due to precision error with index   value and units data range. # App callbacks None\",\"indexId\":\"Id of the index.\",\"token\":\"Super token address.\"}},\"getIndex(address,address,uint32)\":{\"details\":\"Query the data of a index.\",\"params\":{\"indexId\":\"Id of the index.\",\"publisher\":\"The publisher of the index.\",\"token\":\"Super token address.\"},\"returns\":{\"exist\":\"Does the index exist.\",\"indexValue\":\"Value of the current index.\",\"totalUnitsApproved\":\"Total units approved for the index.\",\"totalUnitsPending\":\"Total units pending approval for the index. # App callbacks None\"}},\"getSubscription(address,address,uint32,address)\":{\"details\":\"Get data of a subscription\",\"params\":{\"indexId\":\"Id of the index.\",\"publisher\":\"The publisher of the index.\",\"subscriber\":\"The subscriber of the index.\",\"token\":\"Super token address.\"},\"returns\":{\"approved\":\"Is the subscription approved?\",\"pendingDistribution\":\"Pending amount of tokens to be distributed for unapproved subscription.\",\"units\":\"Units of the suscription.\"}},\"getSubscriptionByID(address,bytes32)\":{\"details\":\"Get data of a subscription by agreement ID\",\"params\":{\"agreementId\":\"The agreement ID.\",\"token\":\"Super token address.\"},\"returns\":{\"approved\":\"Is the subscription approved?\",\"indexId\":\"Id of the index.\",\"pendingDistribution\":\"Pending amount of tokens to be distributed for unapproved subscription.\",\"publisher\":\"The publisher of the index.\",\"units\":\"Units of the suscription.\"}},\"listSubscriptions(address,address)\":{\"details\":\"List subscriptions of an user.\",\"params\":{\"subscriber\":\"The user, a subscriber.\",\"token\":\"Super token address.\"},\"returns\":{\"indexIds\":\"Indexes of the subscriptions.\",\"publishers\":\"Publishers of the subcriptions.\",\"unitsList\":\"Units of the subscriptions.\"}},\"realtimeBalanceOf(address,address,uint256)\":{\"details\":\"Calculate the real-time balance for the account of this agreement class.\",\"params\":{\"account\":\"Account the state belongs to\",\"time\":\"Future time used for the calculation.\"},\"returns\":{\"deposit\":\"Account deposit amount of this agreement.\",\"dynamicBalance\":\"Dynamic balance portion of real-time balance of this agreement.\",\"owedDeposit\":\"Account owed deposit amount of this agreement.\"}},\"updateIndex(address,uint32,uint128,bytes)\":{\"details\":\"Update index value of an index.\",\"params\":{\"indexId\":\"Id of the index.\",\"indexValue\":\"Value of the index. # App callbacks None\",\"token\":\"Super token address.\"}},\"updateSubscription(address,uint32,address,uint128,bytes)\":{\"details\":\"Update the nuber of units of a subscription.\",\"params\":{\"indexId\":\"Id of the index.\",\"subscriber\":\"The subscriber of the index.\",\"token\":\"Super token address.\",\"units\":\"Number of units of the subscription. # App callbacks - if subscription exist   - AgreementCreated callback to the subscriber:      - agreementId is for the subscription - if subscription does not exist   - AgreementUpdated callback to the subscriber:      - agreementId is for the subscription\"}}},\"title\":\"Superfluid's instant distribution agreement interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/hellwolf/Projects/superfluid/superfluid-protocol-preview/ethereum-contracts-v0.1/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":\"IInstantDistributionAgreementV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/hellwolf/Projects/superfluid/superfluid-protocol-preview/ethereum-contracts-v0.1/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":{\"keccak256\":\"0x73eb42f387a0a3a5f52a6ecee8f992a52043d71d23d40f4acebde77af577eb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f50dfaf5fd658b65ff2798ef8a828208e7468164d7959c836c92fedfb16b5ff\",\"dweb:/ipfs/QmZ8zMtoMfapgfh5kjTPnvHA65KWCfdJfpUnxg6RPTkgSc\"]},\"/home/hellwolf/Projects/superfluid/superfluid-protocol-preview/ethereum-contracts-v0.1/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x1515ee00700f5ae5cece8dda6d62e0c12056176dc2c41933487ba11b8aaa743b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0840cdf8e3c6545b76b60c205c03abc011b8ede8256c5d5a65476de4584a5f5\",\"dweb:/ipfs/Qmf6JcWedy2BxmzN5xFJ86SwfxGEX81Ac3Rza8NdqWj19H\"]},\"/home/hellwolf/Projects/superfluid/superfluid-protocol-preview/ethereum-contracts-v0.1/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xd30f1588320e14a4834520749d9a625f3593aadddd0d1724ab6365915003ccf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92077b3a9d6ab82c64f672bb33b95a92e699069f4b1955fb0fab6104364789a5\",\"dweb:/ipfs/QmZ49sPQpxn9LKj3i2w8VEcc1oBfUUu656QuB1SY6mo5NF\"]},\"/home/hellwolf/Projects/superfluid/superfluid-protocol-preview/ethereum-contracts-v0.1/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0xa60ff361f5c525b21081288ebee8ed4d68f8b5b8e86d8138198d046141fba35c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e3239450da65109f576d28fc11cb0df7ce7aa8a41566a5f0ef97a7c8a1f3a55\",\"dweb:/ipfs/QmQcjb6dNQELxPWq12x21Cd18TbYszPNxFMXxYpXGC1Wi8\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x66622d89fb8f57aa1c09f69b1088d242aa92ceba96462854396ddb724e71849f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abb0340421d8a39de72aa4679351f2eba6eee62f4ccfaa649852431f5d361165\",\"dweb:/ipfs/QmULDf3ot52Qd1s5LDjD11bGFCM8f212KTmazvvaT64Uk4\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "devdoc": {
    "author": "Superfluid Notes:   - A publisher can create as many as indeces as possibily identifiable with `indexId`.     - `indexId` is deliberately limited to 32 bits, to avoid the chance for sha-3 collision.       Despite knowing sha-3 collision is only theoratical.   - A publisher can create subscription to an index for any subscriber.   - A subscription consists of:     - The index it subscribes to.     - Number of units subscribed.   - An index consists of:     - Current value as `uint128 indexValue`.     - Total units of the approved subscriptions as `uint128 totalUnitsApproved`.     - Total units of the non approved subscription as `uint128 totalUnitsPending`.   - A publisher can update index with new value that doesn't decrease.   - A publisher can update subscription with any number of units.   - A publisher or a subscriber can delete subscription and reset units to zero.   - A subscriber must approve the index in order to receive distributions from the publisher     each time the index is updated.     - The amount distributed is $$\\Delta{index} * units$$   - Distributions to a non approved subscription stays in the publisher's deposit until:     - the subscriber approve the subscription (side effect),     - the publisher update the subscription (side effect),     - the subscriber delete the subscription even if it is never approved (side effect),     - or the subscriber can explicitly claim them.",
    "kind": "dev",
    "methods": {
      "agreementType()": {
        "details": "ISuperAgreement.agreementType implementation"
      },
      "approveSubscription(address,address,uint32,bytes)": {
        "details": "Approve the subscription of an index.",
        "params": {
          "indexId": "Id of the index. # App callbacks - if subscription exist   - AgreementCreated callback to the publisher:      - agreementId is for the subscription - if subscription does not exist   - AgreementUpdated callback to the publisher:      - agreementId is for the subscription",
          "publisher": "The publisher of the index.",
          "token": "Super token address."
        }
      },
      "calculateDistribution(address,address,uint32,uint256)": {
        "details": "Calculate actual distribution amount",
        "params": {
          "amount": "The amount of tokens desired to be distributed.",
          "indexId": "Id of the index.",
          "publisher": "The publisher of the index.",
          "token": "Super token address."
        }
      },
      "claim(address,address,uint32,bytes)": {
        "details": "Claim pending distributions.",
        "params": {
          "indexId": "Id of the index. The subscription should not exist yet. # App callbacks - AgreementUpdated callback to the publisher:    - agreementId is for the subscription",
          "publisher": "The publisher of the index.",
          "token": "Super token address."
        }
      },
      "createIndex(address,uint32,bytes)": {
        "details": "Create a new index for the publisher.",
        "params": {
          "indexId": "Id of the index. App callbacks: None",
          "token": "Super token address."
        }
      },
      "deleteSubscription(address,address,uint32,address,bytes)": {
        "details": "Delete the subscription of an user.",
        "params": {
          "indexId": "Id of the index.",
          "publisher": "The publisher of the index.",
          "subscriber": "The user, a subscriber. # App callbacks - if the subscriber called it   - AgreementTerminated callback to the publsiher:      - agreementId is for the subscription - if the publisher called it   - AgreementTerminated callback to the subscriber:      - agreementId is for the subscription",
          "token": "Super token address."
        }
      },
      "distribute(address,uint32,uint256,bytes)": {
        "details": "Distribute tokens through the index.",
        "params": {
          "amount": "The amount of tokens desired to be distributed. NOTE: - This is a convenient version of updateIndex. It adds to the index   a delta that equals to `amount / totalUnits`. - The actual amount distributed could be obtained via   `calculateDistribution`. This is due to precision error with index   value and units data range. # App callbacks None",
          "indexId": "Id of the index.",
          "token": "Super token address."
        }
      },
      "getIndex(address,address,uint32)": {
        "details": "Query the data of a index.",
        "params": {
          "indexId": "Id of the index.",
          "publisher": "The publisher of the index.",
          "token": "Super token address."
        },
        "returns": {
          "exist": "Does the index exist.",
          "indexValue": "Value of the current index.",
          "totalUnitsApproved": "Total units approved for the index.",
          "totalUnitsPending": "Total units pending approval for the index. # App callbacks None"
        }
      },
      "getSubscription(address,address,uint32,address)": {
        "details": "Get data of a subscription",
        "params": {
          "indexId": "Id of the index.",
          "publisher": "The publisher of the index.",
          "subscriber": "The subscriber of the index.",
          "token": "Super token address."
        },
        "returns": {
          "approved": "Is the subscription approved?",
          "pendingDistribution": "Pending amount of tokens to be distributed for unapproved subscription.",
          "units": "Units of the suscription."
        }
      },
      "getSubscriptionByID(address,bytes32)": {
        "details": "Get data of a subscription by agreement ID",
        "params": {
          "agreementId": "The agreement ID.",
          "token": "Super token address."
        },
        "returns": {
          "approved": "Is the subscription approved?",
          "indexId": "Id of the index.",
          "pendingDistribution": "Pending amount of tokens to be distributed for unapproved subscription.",
          "publisher": "The publisher of the index.",
          "units": "Units of the suscription."
        }
      },
      "listSubscriptions(address,address)": {
        "details": "List subscriptions of an user.",
        "params": {
          "subscriber": "The user, a subscriber.",
          "token": "Super token address."
        },
        "returns": {
          "indexIds": "Indexes of the subscriptions.",
          "publishers": "Publishers of the subcriptions.",
          "unitsList": "Units of the subscriptions."
        }
      },
      "realtimeBalanceOf(address,address,uint256)": {
        "details": "Calculate the real-time balance for the account of this agreement class.",
        "params": {
          "account": "Account the state belongs to",
          "time": "Future time used for the calculation."
        },
        "returns": {
          "deposit": "Account deposit amount of this agreement.",
          "dynamicBalance": "Dynamic balance portion of real-time balance of this agreement.",
          "owedDeposit": "Account owed deposit amount of this agreement."
        }
      },
      "updateIndex(address,uint32,uint128,bytes)": {
        "details": "Update index value of an index.",
        "params": {
          "indexId": "Id of the index.",
          "indexValue": "Value of the index. # App callbacks None",
          "token": "Super token address."
        }
      },
      "updateSubscription(address,uint32,address,uint128,bytes)": {
        "details": "Update the nuber of units of a subscription.",
        "params": {
          "indexId": "Id of the index.",
          "subscriber": "The subscriber of the index.",
          "token": "Super token address.",
          "units": "Number of units of the subscription. # App callbacks - if subscription exist   - AgreementCreated callback to the subscriber:      - agreementId is for the subscription - if subscription does not exist   - AgreementUpdated callback to the subscriber:      - agreementId is for the subscription"
        }
      }
    },
    "title": "Superfluid's instant distribution agreement interface.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
